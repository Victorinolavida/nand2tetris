function Pipe.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push constant 0
not
pop this 4
push pointer 0
return
function Pipe.draw 0
push argument 0
pop pointer 0
push constant 1
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
push this 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Pipe.clean 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
push this 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Pipe.move 0
push argument 0
pop pointer 0
push this 0
push constant 0
lt
push this 0
push constant 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 4
push pointer 0
call Pipe.clean 1
pop temp 0
push constant 0
return
label IF_FALSE0
push pointer 0
call Pipe.clean 1
pop temp 0
push this 0
push constant 5
sub
pop this 0
push this 2
push constant 5
sub
pop this 2
push pointer 0
call Pipe.draw 1
pop temp 0
push constant 25
call Sys.wait 1
pop temp 0
push constant 0
return
function Pipe.collision 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Pipe.collisionX 2
pop local 0
push pointer 0
push argument 1
call Pipe.collisionY 2
pop local 1
push local 0
push local 1
and
return
function Pipe.getLength 1
push argument 0
pop pointer 0
push this 0
push this 2
sub
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
neg
return
goto IF_END0
label IF_FALSE0
push local 0
return
label IF_END0
function Pipe.collisionX 4
push argument 0
pop pointer 0
push pointer 0
call Pipe.getLength 1
pop local 3
push argument 1
call Bird.getCurrentColumn 1
pop local 2
push this 0
push local 3
add
push local 2
gt
pop local 0
push this 0
push local 2
push constant 20
add
lt
pop local 1
push local 0
push local 1
and
return
function Pipe.collisionY 3
push argument 0
pop pointer 0
push argument 1
call Bird.getCurrentRow 1
pop local 2
push this 1
push pointer 0
call Pipe.getWidth 1
add
push local 2
gt
pop local 0
push this 1
push local 2
push constant 20
add
lt
pop local 1
push local 0
push local 1
and
return
function Pipe.getWidth 1
push argument 0
pop pointer 0
push this 1
push this 3
sub
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
neg
return
goto IF_END0
label IF_FALSE0
push local 0
return
label IF_END0
function Pipe.getX 0
push argument 0
pop pointer 0
push this 0
return
function Pipe.isDissable 0
push argument 0
pop pointer 0
push this 4
return
function Pipe.setDissable 0
push argument 0
pop pointer 0
push constant 0
pop this 0
push pointer 0
call Pipe.clean 1
pop temp 0
push argument 1
pop this 4
push constant 0
return
